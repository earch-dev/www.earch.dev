# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  # cancel-in-progress: false
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          # Repository name with owner. For example, actions/checkout
          repository: ${{ github.repository }} # optional, default is ${{ github.repository }}
          # The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event.  Otherwise, uses the default branch.
          # ref: # optional
      
          # Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT.
          token: ${{ github.token }} # optional, default is ${{ github.token }}
          # SSH key used to fetch the repository. The SSH key is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the SSH key.
          # ssh-key: # optional
          # Known hosts in addition to the user and global host key database. The public SSH keys for a host may be obtained using the utility `ssh-keyscan`. For example, `ssh-keyscan github.com`. The public key for github.com is always implicitly added.
          # ssh-known-hosts: # optional
          # Whether to perform strict host key checking. When true, adds the options `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to configure additional hosts.
          # ssh-strict: # optional, default is true
          # The user to use when connecting to the remote SSH host. By default 'git' is used.
          # ssh-user: # optional, default is git
          # Whether to configure the token or SSH key with the local git config
          persist-credentials: true # optional, default is true

          # Relative path under $GITHUB_WORKSPACE to place the repository
          # path: # optional
          # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
          clean: true # optional, default is true
          # Partially clone against a given filter. Overrides sparse-checkout if set.
          # filter: # optional
          # Do a sparse checkout on given patterns. Each pattern should be separated with new lines.
          # sparse-checkout: # optional
          # Specifies whether to use cone-mode when doing a sparse checkout.
          # sparse-checkout-cone-mode: # optional, default is true
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 1 # optional, default is 1
          # Whether to fetch tags, even if fetch-depth > 0.
          # fetch-tags: # optional
          # Whether to show progress status output when fetching.
          show-progress: true # optional, default is true
          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.
          # submodules: # optional

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5
        with:
          # Optional static site generator to attempt to configure: "nuxt", "next", "gatsby", or "sveltekit"
          # static_site_generator: # optional
          # Optional file path to static site generator configuration file
          # generator_config_file: # optional
          token: ${{ github.token }}

      - name: Build Jekyll for GitHub Pages
        uses: actions/jekyll-build-pages@v1.0.13
        with:
          # Directory where the source files reside.
          source: ./ # optional, default is ./
          # Output directory of the build. Although it can be nested inside the source, it cannot be the same as the source directory.
          destination: ./_site # optional, default is ./_site
          # Publishes posts with a future date. When set to true, the build is made with the --future option which overrides the future option that may be set in a Jekyll configuration file.
          # future: # optional
          # The SHA-1 of the git commit for which the build is running. Default to GITHUB_SHA.
          build_revision: ${{ github.sha }} # optional, default is ${{ github.sha }}
          # Verbose output
          verbose: true # optional, default is true
          # GitHub token
          token: ${{ github.token }} # default is ${{ github.token }}
      
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          # Artifact name
          name: github-pages # optional, default is github-pages
          # Path of the directory containing the static assets.
          path: _site/ # default is _site/
          # Duration after which artifact will expire in days.
          retention-days: 1 # optional, default is 1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy GitHub Pages site
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          # GitHub token
          token: ${{ github.token }} # default is ${{ github.token }}
          # Time in milliseconds after which to timeout and cancel the deployment (default: 10 minutes)
          timeout: 300000 # optional, default is 600000
          # Maximum number of status report errors before cancelling a deployment (default: 10)
          error_count: 5 # optional, default is 10
          # Time in milliseconds between two deployment status report (default: 5 seconds)
          reporting_interval: 5000 # optional, default is 5000
          # Name of the artifact to deploy
          artifact_name: github-pages # optional, default is github-pages
          # Is this attempting to deploy a pull request as a GitHub Pages preview site? (NOTE: This feature is only in alpha currently and is not available to the public!)
          preview: false # optional, default is false
